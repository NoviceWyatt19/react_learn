{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from \"zustand/middleware\";\nconst useAuthStore = create()(persist(set => ({\n  isLoggedIn: false,\n  username: \"\",\n  roles: [],\n  accessToken: \"\",\n  login: (claims, token) => set({\n    isLoggedIn: true,\n    username: claims.sub,\n    roles: claims.roles.split(\",\"),\n    accessToken: token\n  }),\n  logout: () => set({\n    isLoggedIn: false,\n    username: \"\",\n    roles: [],\n    accessToken: \"\"\n  })\n}), {\n  name: 'auth-storage'\n}));\nexport default useAuthStore;","map":{"version":3,"names":["create","persist","useAuthStore","set","isLoggedIn","username","roles","accessToken","login","claims","token","sub","split","logout","name"],"sources":["/Users/wyattkim/Desktop/Devcourse/grepp_backEnd/front/d_react/grepp-react/src/store/AuthStore.js"],"sourcesContent":["import {create} from 'zustand'\nimport {persist} from \"zustand/middleware\";\n\nconst useAuthStore = create()(\n    persist(\n        (set) => ({\n          isLoggedIn: false,\n          username: \"\",\n          roles: [],\n          accessToken: \"\",\n\n          login: (claims, token) => set({\n            isLoggedIn: true,\n            username: claims.sub, roles: claims.roles.split(\",\"), accessToken: token\n          }),\n\n          logout:() => set({\n            isLoggedIn: false,\n            username: \"\", roles: [], accessToken: \"\"\n          }),\n        }),\n        {name: 'auth-storage'},\n    ),\n)\n\nexport default useAuthStore"],"mappings":"AAAA,SAAQA,MAAM,QAAO,SAAS;AAC9B,SAAQC,OAAO,QAAO,oBAAoB;AAE1C,MAAMC,YAAY,GAAGF,MAAM,CAAC,CAAC,CACzBC,OAAO,CACFE,GAAG,KAAM;EACRC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EAEfC,KAAK,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAKP,GAAG,CAAC;IAC5BC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAEI,MAAM,CAACE,GAAG;IAAEL,KAAK,EAAEG,MAAM,CAACH,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC;IAAEL,WAAW,EAAEG;EACrE,CAAC,CAAC;EAEFG,MAAM,EAACA,CAAA,KAAMV,GAAG,CAAC;IACfC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EACxC,CAAC;AACH,CAAC,CAAC,EACF;EAACO,IAAI,EAAE;AAAc,CACzB,CACJ,CAAC;AAED,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}