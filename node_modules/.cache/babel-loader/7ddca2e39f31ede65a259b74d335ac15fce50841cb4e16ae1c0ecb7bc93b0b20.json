{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\n// fixme\nconst useAuthStore = create()(persist(set => ({\n  isLoggedIn: false,\n  username: \"\",\n  roles: [],\n  accessToken: \"\",\n  login: (claims, token) => set({\n    isLoggedIn: true,\n    username: claims.sub,\n    roles: token.roles,\n    accessToken: token.jwt\n  }),\n  logout: () => set({\n    isLoggedIn: false,\n    username: \"\",\n    roles: [],\n    accessToken: \"\"\n  })\n}), {\n  name: 'position-storage'\n}));\nexport default useAuthStore;","map":{"version":3,"names":["create","persist","useAuthStore","set","isLoggedIn","username","roles","accessToken","login","claims","token","sub","jwt","logout","name"],"sources":["/Users/wyattkim/Desktop/Devcourse/grepp_backEnd/front/d_react/grepp-react/src/store/AuthStore.js"],"sourcesContent":["import {create} from 'zustand'\nimport { persist } from 'zustand/middleware'\n\n// fixme\nconst useAuthStore = create()(\n    persist(\n        (set) => ({\n          isLoggedIn:false,\n          username:\"\",\n          roles:[],\n          accessToken:\"\",\n\n          login: (claims, token) => set({\n            isLoggedIn:true,\n            username: claims.sub,\n            roles: token.roles,\n            accessToken: token.jwt\n          }),\n          logout: () => set({\n            isLoggedIn:false,\n            username:\"\",\n            roles:[],\n            accessToken:\"\"\n          })\n        }),\n\n        { name: 'position-storage' },\n    ),\n)\n\nexport default useAuthStore"],"mappings":"AAAA,SAAQA,MAAM,QAAO,SAAS;AAC9B,SAASC,OAAO,QAAQ,oBAAoB;;AAE5C;AACA,MAAMC,YAAY,GAAGF,MAAM,CAAC,CAAC,CACzBC,OAAO,CACFE,GAAG,KAAM;EACRC,UAAU,EAAC,KAAK;EAChBC,QAAQ,EAAC,EAAE;EACXC,KAAK,EAAC,EAAE;EACRC,WAAW,EAAC,EAAE;EAEdC,KAAK,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAKP,GAAG,CAAC;IAC5BC,UAAU,EAAC,IAAI;IACfC,QAAQ,EAAEI,MAAM,CAACE,GAAG;IACpBL,KAAK,EAAEI,KAAK,CAACJ,KAAK;IAClBC,WAAW,EAAEG,KAAK,CAACE;EACrB,CAAC,CAAC;EACFC,MAAM,EAAEA,CAAA,KAAMV,GAAG,CAAC;IAChBC,UAAU,EAAC,KAAK;IAChBC,QAAQ,EAAC,EAAE;IACXC,KAAK,EAAC,EAAE;IACRC,WAAW,EAAC;EACd,CAAC;AACH,CAAC,CAAC,EAEF;EAAEO,IAAI,EAAE;AAAmB,CAC/B,CACJ,CAAC;AAED,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}