{"ast":null,"code":"var _jsxFileName = \"/Users/wyattkim/Desktop/Devcourse/grepp_backEnd/front/d_react/grepp-react/src/App.js\",\n  _s = $RefreshSig$();\n// NOTE 비구조화 할당 : 객체를 매개변수로 받아서 각 변수에 구조분해하여 할당\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  function handleClick(i) {\n    const nextSquares = squares.slice();\n    if (squares[i] || calculateWinner(squares)) return;\n    if (xIsNext) nextSquares[i] = \"O\";else nextSquares[i] = \"X\";\n    setXIsNext(!xIsNext);\n    setSquares(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"O\" : \"X\");\n  }\n\n  // jsx 문법\n  return (\n    /*#__PURE__*/\n    // div 태그로도 가능\n    // 반환은 항상 하나의 jsx 문법으로 감싸 줘야함\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[0],\n          onSquareClick: () => handleClick(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[1],\n          onSquareClick: () => handleClick(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[2],\n          onSquareClick: () => handleClick(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[3],\n          onSquareClick: () => handleClick(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[4],\n          onSquareClick: () => handleClick(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[5],\n          onSquareClick: () => handleClick(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[6],\n          onSquareClick: () => handleClick(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[7],\n          onSquareClick: () => handleClick(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[8],\n          onSquareClick: () => handleClick(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(Board, \"coMecpjTzg1W7KUe5tSm+DrcByQ=\");\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","xIsNext","setXIsNext","squares","setSquares","Array","fill","handleClick","i","nextSquares","slice","calculateWinner","winner","status","_c2","lines","length","a","b","c","$RefreshReg$"],"sources":["/Users/wyattkim/Desktop/Devcourse/grepp_backEnd/front/d_react/grepp-react/src/App.js"],"sourcesContent":["// NOTE 비구조화 할당 : 객체를 매개변수로 받아서 각 변수에 구조분해하여 할당\nimport {useState} from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n  return (\n      <button className=\"square\" onClick={onSquareClick}>\n        {value}\n      </button>\n  );\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    const nextSquares = squares.slice();\n\n    if(squares[i] || calculateWinner(squares))return;\n\n    if(xIsNext) nextSquares[i] = \"O\";\n    else nextSquares[i] = \"X\";\n\n    setXIsNext(!xIsNext)\n    setSquares(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"O\" : \"X\");\n  }\n\n  // jsx 문법\n  return (\n      // div 태그로도 가능\n      // 반환은 항상 하나의 jsx 문법으로 감싸 줘야함\n      <>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n          <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n          <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n          <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n          <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n          <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n          <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n        </div>\n      </>\n    )\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}